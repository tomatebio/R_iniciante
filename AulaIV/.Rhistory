group_by(cyl, vs) %>%
summarise(cyl_n = n())
mtcars %>%
group_by(cyl, vs) %>%
summarise(cyl_n = n()) %>%
group_vars()
mtcars %>%
group_by(cyl) %>%
summarise(disp = mean(disp), sd = sd(disp))
?sd
mtcars %>%
group_by(cyl) %>%
summarise(disp = mean(disp), sd = sd(disp, na.rm))
mtcars %>%
group_by(cyl) %>%
summarise(disp = mean(disp), sd = sd(disp, na.rm=FALSE))
f <- ggplot(mpg, aes(class, hwy)) + geom_boxplot()
library(ggplot2)
f <- ggplot(mpg, aes(class, hwy)) + geom_boxplot()
f
f <- ggplot(mpg, aes(class, hwy)) + geom_boxplot(position=position_dodge(1))
f
data("mtcars")
?mtcars
head(mtcars)
library(reshape2)
melt(mtcars)
melt(mtcars, id=rownames(mtcars))
melt(mtcars, id=rownames)
ids<-rownames(mtcars)
ids
mtcars[,1:10]
mtcars[,c(ids,1:11)]
cbind(ids,mtcars)
mtcars2<-cbind(ids,mtcars)
rownames(mtcars2)<-NULL
mtcars2
head(mtcars)
library(reshape2)
melt(mtcars2)
library(dplyr)
mtcars_longo
mtcars_longo<-melt(mtcars2)
library(dplyr)
mtcars_longo
str(mtcars_longo)
?select
as_tibble(mtcars2)
?subset
subset(mtcars_longo,select= gear:carb)
subset(mtcars_longo,select= gear)
subset(mtcars_longo,select= "gear")
head(mtcars_longo)
head(mtcars2)
as_tibble(mtcars2)
mtcars2_tidy<-as_tibble(mtcars2)
mtcars2_tidy
mtcars2_tidy %>%
select(gear,carb)
mtcars2_tidy %>%
select( am, gear,carb)
library(ggplot2)
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, fill = gear, color = gear)) +
geom_density(alpha = 0.2) +
scale_x_log10()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, fill = gear, color = gear)) +  geom_geom()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, fill = gear, color = gear)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill=am) +  geom_boxplot()
ggplot(mtcars, aes(factor(cyl), mpg, fill=factor(am))) + geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill= am) +  geom_boxplot()
ggplot(mtcars, aes(factor(cyl), mpg, fill=factor(am))) + geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill= factor(am)) +  geom_boxplot()
ggplot(mtcars, aes(factor(cyl), mpg, fill=factor(am))) + geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill= factor(am)) +  geom_boxplot()
)
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill= a)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, fill= am)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(am, gear, group_by(am))) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(factor(am), gear)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(factor(am), gear)) +  geom_boxplot()
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(factor(am), gear)) +  geom_boxplot(position = "dodge")
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(factor(am), gear, fill=carb)) +  geom_boxplot(position = "dodge")
mtcars2_tidy %>%
select( am, gear,carb)  %>% # isso seleciona as variaveis am, gear, e carb que serão utilizadas no ggplot
ggplot(aes(factor(am), gear, fill=carb)) +  geom_boxplot(position = "dodge")
library(reshape2)
melt(mtcars2)
mtcars2_longo<-melt(mtcars2)
mtcars2_longo[,mtcars2_longo$variable==c("gear")]
mtcars2_longo[mtcars2_longo$variable==c("gear"),]
mtcars2_longo[mtcars2_longo$variable==c("gear| carb"),]
?any_vars
mtcars2_longo[c("gear","carb") %in% mtcars2_longo$variable,]
? %in%
? in
mtcars2_longo[mtcars2_longo$variable=="am" | mtcars2_longo$variable=="gear" | mtcars2_longo$variable=="carb",]
mtcars2_longo[ mtcars2_longo$variable %in% c("am","gear","carb"),]
mGearCarb<-mtcars2_longo[ mtcars2_longo$variable %in% c("am","gear","carb"),]
ggplot(mGearCarb, aes(x=ID, y=value, color=variable))+geom_boxplot()
ggplot(mGearCarb, aes(x=ids, y=value, color=variable))+geom_boxplot()
ggplot(mGearCarb, aes(x=am, y=value, color=variable))+geom_boxplot()
ggplot(mGearCarb, aes( y=value, color=variable))+geom_boxplot()
ggplot(mGearCarb, aes( y=value, color=variable, group=am))+geom_boxplot()
ggplot(mGearCarb, aes( y=value, color=variable))+geom_boxplot()
mtcars2_longo<-melt(mtcars2, ids=c(id,am) )
mtcars2_longo<-melt(mtcars2, id=c(ids,am) )
mtcars2_longo<-melt(mtcars2, id=c("ids", "am") )
mtcars2_longo<-melt(mtcars2, id=c("ids", "am") ) # Coloco o id do individuo e o CT  aqui
mtcars2
mtcars2_longo
ggplot(mGearCarb, aes(am, y=value, color=variable))+geom_boxplot()
mtcars2_longo<-melt(mtcars2, id=c("ids", "am") ) # Coloco o id do individuo e o CT  aqui
# a linha abaixo seleciona os tres campos desejados  para fazer o grafico
mGearCarb<-mtcars2_longo[ mtcars2_longo$variable %in% c("gear","carb"),]
ggplot(mGearCarb, aes(am, y=value, color=variable))+geom_boxplot()
ggplot(mGearCarb, aes(am, y=value, color=variable))+geom_boxplot(position=position_dodge(1))
# Vou usar o data set do proprio R para mostrar
data("mtcars")  # mtcars é um objeto que tem 11 variaveis de varios tipos sobre carros.
# Para este exemplo ele funciona bem.
head(mtcars)
# As proximas linha eu vou arrumar o conjunto de dados para ficar parecido com o teu.
ids<-rownames(mtcars)
mtcars2<-cbind(ids,mtcars)
rownames(mtcars2)<-NULL
mtcars2$am<-as.factor(mtcars2$am)
## Agora os dados mtcars2 é muito semelhante aos teus. Veja a estrutura dos dados
head(mtcars2)
library(ggplot2)
library(reshape2)
mtcars2_longo<-melt(mtcars2, id=c("ids", "am") ) # Coloco o id do individuo e o CT  aqui
# a linha abaixo seleciona os tres campos desejados  para fazer o grafico
mGearCarb<-mtcars2_longo[ mtcars2_longo$variable %in% c("gear","carb"),]
ggplot(mGearCarb, aes(am, y=value, color=variable))+geom_boxplot(position=position_dodge(1))
ggplot(mGearCarb, aes(am, y=value, fill=variable))+geom_boxplot(position=position_dodge(1))
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_void()
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic()
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")
?guides
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guides_legend("LEGENDA")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guide_legend("LEGENDA")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guides(title="LEGENDA")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guides(title="LEGENDA")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guide_legend(title="LEGENDA")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")+guide_legend(title="kd")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+guide_legend(title="kd")+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+guides(fill=guide_legend(title=NULL))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")
ggplot(mGearCarb, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+guides(fill=guide_legend(title="LEGENDA"))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")
head(mtcars)
mDispHp<-mtcars2_longo[ mtcars2_longo$variable %in% c("disp","hp"),]
ggplot(mDispHp, aes(am, y=value, fill=variable))+
geom_boxplot(position=position_dodge(1))+guides(fill=guide_legend(title="LEGENDA"))+
theme_classic() + labs(x= "Valores", y="Grupos experimentais")
source('~/Downloads/semantix/preliminar.r', echo=TRUE)
installed.packages("rentrez")
install.packages("rentrez")
library(rentrez)
pkg_search <- entrez_search(db="pubmed", term="(Poecilia [All Fields])")
pkg_search
pkg_summs <- entrez_summary(db="pubmed", web_history=pkg_search$web_history)
ggplot(journal_freq, aes(reorder(journal, n.papers), n.papers)) +
geom_point(size=2) +
coord_flip() +
scale_y_continuous("Number of papers") +
scale_x_discrete("Journal") +
theme_bw() +
ggtitle("Venues for papers describing R Packages in 2017")
pkg_search <- entrez_search(db="pubmed", term="(Poecilia [All Fields])", use_history = T)
pkg_summs <- entrez_summary(db="pubmed", web_history=pkg_search$web_history)
pkg_search <- entrez_search(db="pubmed", term="(Poecilia vivipara [All Fields])", use_history = T)
pkg_summs <- entrez_summary(db="pubmed", web_history=pkg_search$web_history)
pkg_summs
journals <- extract_from_esummary(pkg_summs, "source")
journal_freq <- as.data.frame(table(journals, dnn="journal"), responseName="n.papers")
ggplot(journal_freq, aes(reorder(journal, n.papers), n.papers)) +
geom_point(size=2) +
coord_flip() +
scale_y_continuous("Number of papers") +
scale_x_discrete("Journal") +
theme_bw() +
ggtitle("Venues for papers describing R Packages in 2017")
library(ggplot2)
journals <- extract_from_esummary(pkg_summs, "source")
journal_freq <- as.data.frame(table(journals, dnn="journal"), responseName="n.papers")
ggplot(journal_freq, aes(reorder(journal, n.papers), n.papers)) +
geom_point(size=2) +
coord_flip() +
scale_y_continuous("Number of papers") +
scale_x_discrete("Journal") +
theme_bw() +
ggtitle("Venues for papers describing R Packages in 2017")
pkg_search <- entrez_search(db="pubmed", term="(Poecilia reticulata [All Fields])", use_history = T)
pkg_summs <- entrez_summary(db="pubmed", web_history=pkg_search$web_history)
pkg_summs
library(ggplot2)
journals <- extract_from_esummary(pkg_summs, "source")
journal_freq <- as.data.frame(table(journals, dnn="journal"), responseName="n.papers")
ggplot(journal_freq, aes(reorder(journal, n.papers), n.papers)) +
geom_point(size=2) +
coord_flip() +
scale_y_continuous("Number of papers") +
scale_x_discrete("Journal") +
theme_bw() +
ggtitle("Venues for papers describing R Packages in 2017")
library(swirl)
uninstall_all_courses(force=T)
install_course_directory("/home/carlos/R/Programando_em_R")
library(swirl)
swirl()
help("plot")
?plot
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
uninstall_all_courses(force=T)
install_course_github("tomatebio","Programando_em_R")
swirl()
2+2
getwd()
z<-rnorm(1000)
z
table(z)
?rnorm
fbfdndn
q()
help(plot)
help.search("matrix")
??matrix
help.start(matrix)
help.start(¨matrix")
help.start("matrix")
help.start()
?if
)
?if
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("googlesheets")
install.packages("httr")
library(swirl)
install_course_github("tomatebio","Programando_em_R")
swirl()
2 + 2
suppressPackageStartupMessages(library(dplyr))
gs_gap_key() %>%
gs_key(lookup = FALSE) %>%
gs_read() %>%
head(3)
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
library(googlesheets)
file<-gs_key("1bkrQ8_-2kbR4-Hrk5t0nWOeX1tzC6Nayxkmk_jfVL0Q")
gs_ls()
library(googlesheets)
suppressMessages(library(dplyr))
gs_ls()
install.packages("googlesheets4")
library(googlesheets4)
library(googledrive)
(deaths <- drive_get("2020"))
(curso <- drive_get("Curso R -2020 "))
read_sheet(curso)
sheets_get(curso)
file<-gs_key("1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ")
sheets_get("1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ")
read_sheet("1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ")
dataf=data.frame(t="2018-07-07 17:17:17", hash="InVzZXIiLCJjb3Vyc2VfbmFtZSIsImxlc3Nvbl9uYW1lIiwicXVlc3" ")
sheets_append(data, ss="1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ", sheet = "Respostas")
dataf=data.frame(t= "2018-07-07 17:17:17", hash="InVzZXIiLCJjb3Vyc2VfbmFtZSIsImxlc3Nvbl9uYW1lIiwicXVlc3")
sheets_append(dataf, ss="1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ", sheet = "Respostas")
library(googlesheets4)
library(googledrive)
sheets_append(dataf, ss="1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ", sheet = "Respostas")
library(googlesheets4)
library(googledrive)
devtools::install_github("tidyverse/googlesheets4")
install.packages("devtools")
library(googlesheets4)
sheets_append(dataf, ss="1pawl9xGARVHsHIHkXb8bDOFihw1_FL-Fh5TXbluHjbQ", sheet = "Respostas")
devtools::install_github("tidyverse/googlesheets4")
library(googlesheets4)
library(swirl)
swirl()
2 + 2
x<-c(1:10)
y<-c(2:11)
plot(x,y)
plot(rep(1,10))
png("plot1.png", width=600,height=400)
x<-c(1:10)
y<-c(2:11)
plot(x,y)
dev.off()
data(airquality)
names(airquality)
airquality$date<-with(airquality,ISOdate(1973,Month,Day))
png("plot2.png", width=600,height=400)
plot(Ozone~date, data=airquality)
dev.off()
png("plot3.png", width=600,height=400)
plot(Ozone~date, data=airquality, type="l")
dev.off()
png("plot4.png", width=600,height=400)
plot(Ozone~date, data=airquality, type="h")
dev.off()
png("plot5.png", width=600,height=400)
plot(Ozone~date, data=airquality, type="h", main="Qualidade do ar",xlab="data",ylab="Ozônio",col="red")
dev.off()
png("plot8.png", width=600,height=400)
bad<-ifelse(airquality$Ozone>=90,"orange","forestgreen")
plot(Ozone~date, data=airquality,type="h",col=bad)
dev.off()
png("plot6.png")
x11()
plot(x,y,type="n")
axis(4)
text(8,8,"Comentário")
mtext("texto lateral",side=4)
points(1:10,rep(4,10))
abline(h=7)
abline(v=3)
arrows(1:10,rep(4,10),1:10,rep(5,10), angle=45)
dev.off()
png("plot7.png")
par(mfrow=c(2,2),new=FALSE,family="serif")
plot(1:4,1:4,pch=19,col="green")
plot(4:1,1:4,pch=22,col="red")
plot(1:5,2:6,pch=25)
plot(1:5,1:5,pch= "p")
dev.off()
par(mfrow=c(1,1))
?pch
?par
plot(Ozone~date, data=airquality)
locator(n=2)
demo(graphics)
require(sp)
demo(gallery)
bad<-ifelse(airquality$Ozone>=90,"orange","forestgreen")
plot(Ozone ∼ date, data=airquality,type="h",col=bad)
plot(Ozone~date, data=airquality,type="h",col=bad)
x<-1:10
x2<-10:1
y<-1:10
plot(x,y,col="red",pch=16)
points(x2,y,col="blue", pch=16)
legend(5,10,legend=c("azul","vermelho"),pch=16,col=c("blue","red"))
par(mar=c(5,4,4,5))
plot(Ozone~date, data=airquality,type="h",col="blue",ylab="Ozonio",xlab="Data")
par(new=TRUE)
plot(airquality$date,airquality$Wind,type="l", col="red",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("Vento",side=4,line=3)
barplot(x,col=brewer.pal(8,"BrBG"))
require(RColorBrewer)
example(RColorBrewer)
barplot(x,col=brewer.pal(8,"BrBG"))
barplot(x,col=brewer.pal(2,"BrBG"))
barplot(x,col=brewer.pal(3,"BrBG"))
barplot(x,col=brewer.pal(8,"BrBG"))
barplot(x,col=brewer.pal(3,"BrBG"))
coplot(Ozone~Solar.R|Temp*Wind, number=c(4,4),data=airquality, pch=21)
?coplot
?volvano
?volcano
png("plot9.png")
barplot(x,col=brewer.pal(8,"BrBG"))
dev.off()
install.packages("maps")
require(maps)
map('italy', fill = TRUE, col=brewer.pal(8,"BrBG"))
require(maptools)
require(sp)
mapa=readShapePoly("BRASIL")
require(sf)
require(rgdal)
install.packages("rgdal")
require(rgdal)
install.packages("rgdal")
require(rgdal)
mapa=readShapePoly("BRASIL")
readOGR("BRASIL")
?readOGR
readOGR("BRASIL.shp")
x <- readOGR(dsn = ".", layer = "BRASIL")
install.packages("sf")
require(sf)
x <- st_read("BRASIL.shp")
getwd()
setwd("/home/carlos/R/R_iniciante/AulaIV")
readOGR("BRASIL.shp")
x<-readOGR("BRASIL.shp")
summary(x)
mapa<-readOGR("BRASIL.shp")
hidro=readOGR("hidrografia")
hidro=readOGR("hidrografia.shp")
summary(mapa)
summary(hidro)
plot(mapa)
par(new=T)
plot(hidro,col="blue")
png("plot15.png")
require(maptools)
require(sp)
require(rgdal)
mapa<-readOGR("BRASIL.shp")
hidro=readOGR("hidrografia.shp")
summary(mapa)
summary(hidro)
#limites do mapa
plot(mapa)
par(new=T)
plot(hidro,col="blue")
dev.off()
png("plot15.png")
require(maptools)
require(sp)
require(rgdal)
mapa<-readOGR("BRASIL.shp")
hidro=readOGR("hidrografia.shp")
summary(mapa)
summary(hidro)
#limites do mapa
plot(mapa)
par(new=T)
plot(hidro,col="blue")
dev.off()
numeros<- rnorm(10000)
boxplot(numeros)
numeros<-rnorm(10000)
hist(numeros)
install.packages("pandoc")
library(manipulate)
manipulate(
plot(cars, xlim = c(0, x.max), type = type, ann = label),
x.max = slider(10, 25, step=5, initial = 25),
type = picker("Points" = "p", "Line" = "l", "Step" = "s"),
label = checkbox(TRUE, "Draw Labels"))
manipulate(
plot(cars, xlim = c(0, x.max), type = type, ann = label),
x.max = slider(10, 25, step=5, initial = 25),
type = picker("Points" = "p", "Line" = "l", "Step" = "s"),
label = checkbox(TRUE, "Draw Labels"))
require(rgdal)
?readOGR
mapa<-readOGR("BRASIL.shp", verbose=FALSE)
